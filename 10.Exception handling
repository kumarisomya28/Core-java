Q1) Java try catch block:-

import java.io.IOException;

public class try_catch {
    public static void main(String[] args) {


//        try {
//            int result =5/0;
//            System.out.println(a[8]);
//
//
//
//
//        }catch (ArrayIndexOutOfBoundsException e){
//            System.out.println("tried to access the out of bound element");
//        } catch(ArithmeticException e){
//            System.out.println(e.getStackTrace());
//            System.out.println(e.getMessage());
//            System.out.println(e);
//        }

        int a[] = new int[5];
        System.out.println("hello guys");
        try {
            int result = 5 / 0;
            System.out.println(a[8]);

//        }catch (ArrayIndexOutOfBoundsException | ArithmeticException | NullPointerException e){
//            System.out.println("Handling the exception");
//        } catch(RuntimeException e){
//        }
        }catch(Exception e){
            System.out.println("all exception handled");
        }
        System.out.println("Bye guys");

    }


Q2) Arithmetic Exception.
public class Arithmetic_exception {
    public static void main(String[] args) {
        try{
            int a=10,b=0;
            int c= a/b;
            System.out.println("Result =" + c);
        }
        catch(ArithmeticException e){
            System.out.println("can't divide a number by 0");
        }
    }
}

Q3)NullPointer Exception.
public class NullPointer_exception {
    public static void main(String[] args) {
        try{
            String a= null;
            System.out.println(a.charAt(0));
        }catch(NullPointerException e) {
            System.out.println("NullPointerException");
        }
    }
}

Q4)StringIndexOutOfBound Exception.
public class StringIndexOutOfBound_exception {
    public static void main(String[] args) {
        try{
            String a="I am somya";
            char ch= a.charAt(45);
            System.out.println(ch);
        }
        catch(StringIndexOutOfBoundsException e){
            System.out.println("StringIndexOutOfBoundsException");
        }
    }
}

Q5)FileNotFound Exception.
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;

public class FileNotFound_exception {
    public static void main(String[] args) {
        try{
            File file = new File("E://file.txt");
            FileReader fr = new FileReader(file);
        }catch(FileNotFoundException e){
            System.out.println("file does not exist");
        }
    }
}

Q6) NumberFormat Exception.
public class NumberFormat_exception {
    public static void main(String[] args) {
        try{
            int num = Integer.parseInt("somya");
            System.out.println(num);
        } catch(NumberFormatException e){
            System.out.println("Number format exception");
        }
    }
}

Q7)  ArrayIndexOutOfBounds Exception.
public class ArrayIndexOutOfBounds {
    public static void main(String[] args) {
        try{
            int a[] = new int[5];
            a[6] =9;
        }
        catch(ArrayIndexOutOfBoundsException e){
            System.out.println("array index is out of bounds");
        }
    }
}

Q8)IO Exception .
public class IO_exception {
    public static void main(String[] args) {
        Scanner sc= new Scanner("Somya");
        System.out.println(""+ sc.nextLine());
        System.out.println("Exception output:"+ sc.ioException());
        sc.close();
    }
}

Q9)NoSuchMethod Exception.
  public class NoSuchMethod_exception {
    public static void main(String[] args) {
        Set exampleSet = new HashSet();
        Hashtable exampleTable = new Hashtable();

        exampleSet.iterator().next();
        exampleTable.elements().nextElement();
    }
}

Q10)IllegalArgumentException.
public class Exception {
    public static void print(int a){
        if(a>=18){
            System.out.println("Eligible for Voting");
        } else{
            throw new IllegalArgumentException("not Eligible for Voting");
        }
    }
    public static void main(String[] args) {
       Exception.print(14);

    }
}

Q11) Try-catch-finally block.
public class FinallyBlockInException {
    public static void main(String[] args) {
        int a[]= new int[5];
        System.out.println("hello world");

        try{
            System.out.println(a[3]);
        } catch(java.lang.Exception e){
            System.out.println("Exception Handled");

        } finally{
            System.out.println("I will run always");
        }
        System.out.println("Bye world");
    }
}
